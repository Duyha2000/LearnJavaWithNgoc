class NhanVien:
    def __init__(self, staff_id, name, age, address, wage, hour):
        self.staff_id = staff_id
        self.name = name
        self.age = age
        self.address = address
        self.wage = wage
        self.hour = hour

    def inputInfo(self):
        self.staff_id = input()
        self.name = input()
        self.age = int(input())
        self.address = input()
        self.wage = int(input())
        self.hour = int(input())

    def printInfo(self):
        print(
            f"{self.staff_id} {self.name} {self.age} {self.address} {self.wage} {self.hour}"
        )

    def __str__(self):
        return f"{self.staff_id} {self.name} {self.age} {self.address} {self.wage} {self.hour}"

    def tinhThuong(self):
        if self.hour >= 200:
            return self.wage * 0.2
        elif self.hour < 200 and self.hour >= 100:
            return self.wage * 0.1
        else:
            self.wage = 0


nhanVien1 = NhanVien(1, "ngoc", 18, "abc", 10, 10)
print(nhanVien1)

--
class Restaurant:
    def __init__(self, distance, reviews):
        self.distance = distance
        self.reviews = reviews

    def __str__(self):
        return f"{self.distance} {self.reviews}"


distance = 5
reviews = 1000
favourites = []
for i in range(50):
    kfc = Restaurant(distance, reviews)
    favourites.append(kfc)
    distance += 5
    reviews -= 10

for fav in favourites:
    print(fav)
--
class Dog:
    def __init__(self, ageInMonths):
        self.ageInMonths = ageInMonths

    def isPuppy(self) -> bool:
        return self.ageInMonths <= 18


# Trong Python, def phải truyền tham số self để tham chiếu đến đối tượng hiện tại (this trong Java)
dogs = []
for i in range(3):
    dog = Dog(int(input("enter the age of the dog in months:")))
    dogs.append(dog)


def countPuppies():
    count = 0
    for dog in dogs:
        if dog.isPuppy() == True:
            count += 1
    return count


print(countPuppies())
